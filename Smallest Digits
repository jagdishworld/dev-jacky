import java.io.*; 
import java.util.*; 

// don't change the name of this class
// you can add inner classes if needed
class Main {
	public static void main (String[] args) {
  
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int M = sc.nextInt();
		int[] a = new int[M-N+1];
        System.out.print("Numbers:- ");
		for(int i=0; i<a.length; i++){
			a[i] = N+i;
            System.out.print(a[i] + " ");
		}
        System.out.println(" ");
		int[] b = new int[M-N+1];
        System.out.print("G(i):- "); 
		for(int i=0; i<a.length; i++){
			b[i] = nextPrime(a[i]);
            System.out.print(b[i] + " ");
		}
        System.out.println(" ");
        int sum = 0;
		int[] c = new int[M-N+1];
        System.out.print("F(G(i)):- "); 
		for(int i=0; i<a.length; i++){
			c[i] = smallestDigit(b[i]);
            sum = sum+c[i];
            System.out.print(c[i] + " ");
		}
        System.out.println(" ");
	  System.out.print("Sum= " + sum);
	}
    static int nextPrime (int N) {
        int i=0;
        while(getPrime(N+i)==false){
            i++;
        }
        if (N==1) return N+1; else return N+i;
    }
    static boolean getPrime(int N){
        boolean flag = false;
        for(int i=2; i<=Math.sqrt(N); i++){
            if (N%i ==0) {flag = true; break;}
        }
        if(!flag) return true; else return false;
    }

	public static int smallestDigit(int N){
		int smallest = 9;
		while(N>0){
			int rem = N%10;
			smallest = Math.min(rem, smallest);
			N= N/10;
		}
	return smallest;
	}
}
